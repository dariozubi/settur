generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id @default(cuid())
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId              String

  @@unique([provider, providerAccountId])
}

model Session {
  id              String   @id @default(cuid())
  sessionToken    String   @unique
  expires         DateTime

  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  identifier    String
  token         String   @unique
  expires       DateTime

  @@unique([identifier, token])
}

model Hotel {
  id        Int @id @default(autoincrement())
  name      String
  zone      Zone
  orders    Order[]
}

model Rate {
  trip      Trip
  vehicle   Vehicle
  zone      Zone
  value     Int

  @@unique([trip, vehicle, zone])
}

model Order {
  id          Int @id @default(autoincrement())
  created     DateTime @default(now())
  adults      Int
  children    Int
  infants     Int
  items       String[]
  email       String 
  name        String
  surname     String
  phone       String
  transfers   Transfer[]

  hotel       Hotel @relation(fields: [hotelId], references: [id])
  hotelId     Int
}

model Transfer {
  id        Int @id @default(autoincrement())
  flight    String
  date      DateTime
  vehicle   Vehicle

  order     Order @relation(fields: [orderId], references: [id])
  orderId   Int
}
model Admin {
  id      Int @id @default(autoincrement())
  email   String @unique
}

enum Vehicle {
  SPRINTER
  HIACE
  SUBURBAN
  ESCALADE
  COACH
  SHARED
}

enum Trip {
  ROUND
  ONEWAY
}

enum Zone {
  ZONE1
  ZONE2
  ZONE3
  ZONE4
  ZONE5
  ZONE6
  ZONE7
  ZONE8
  ZONE9
}